;(fdef triple (a) (+ a a a))
(define (fdef? exp)
(and (pair? exp) (eq? (car exp) 'fdef)))
(define (fdef-name exp)
(cadr exp))
(define (fdef-parameters exp)
(caddr exp))
(define (fdef-body exp)
(cdddr exp))
(define (eval-fdef exp env)
(let ((value
(make-function (fdef-parameters exp)
(fdef-body exp))))
(define-name! (fdef-name exp) value env)
value))
